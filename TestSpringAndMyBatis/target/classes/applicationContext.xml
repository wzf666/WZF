<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/smbms?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"></property>
	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<bean id="session" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ts.sd.dao"></property>
	</bean> -->
	<!--  <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.ts.sd.dao.UserMapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> -->
	<!--<bean id="userDao" class="com.ts.sd.aop.impl.UserDaoImpl"></bean>
	<bean id="userService" class="com.ts.sd.aop.impl.UserServiceImpl">
		<property name="ud" ref="userDao"></property>
	</bean>
	<bean id="usl" class="com.ts.sd.aop.UserServiceLogging"></bean> -->
	<context:component-scan base-package="com.ts.sd.aop,com.ts.sd.dao,com.ts.sd.service"/>
	<!-- <aop:config>
		<aop:pointcut expression="execution(* com.ts.sd.aop..*.*(..))" id="pc"/>
		<aop:aspect ref="usl">
			<aop:before method="before" pointcut-ref="pc"/>
			<aop:after-returning method="afterReturning" returning="result" pointcut-ref="pc"/>
			<aop:after-throwing method="afterThrowing" pointcut-ref="pc" throwing="e"/>
			<aop:after method="after" pointcut-ref="pc"/>
			<aop:around method="around" pointcut-ref="pc"/>
		</aop:aspect>
	</aop:config> -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<aop:aspectj-autoproxy/>
	<!-- <tx:advice id="txAdvice" transaction-manager="txManager">
	<tx:attributes>
		<tx:method name="get*" read-only="true" propagation="SUPPORTS"/>
		<tx:method name="add*" propagation="REQUIRED"/>
		<tx:method name="update*" propagation="REQUIRED"/>
		<tx:method name="delete*" propagation="REQUIRED"/>
		<tx:method name="*"/>
	</tx:attributes>
	</tx:advice>
	
	<aop:config>

		<aop:pointcut expression="execution(* com.ts.sd.service..*.*(..))" id="pc"/>

		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>

	</aop:config> -->
	<tx:annotation-driven transaction-manager="txManager"/>
</beans>